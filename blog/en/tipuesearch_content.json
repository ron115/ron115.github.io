{"pages":[{"text":"Test Test hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello hello","tags":"English","loc":"http://localhost:8000/blog/my-super-title.html","title":"My super title"},{"text":"","tags":"hello","loc":"http://localhost:8000/blog/welcome-to-timeinsights-documentation.html","title":"Welcome to TimeInsight's documentation!"},{"text":"hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello hello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hellohello hello hello hello","tags":"English","loc":"http://localhost:8000/blog/this-is-some-title.html","title":"This is some title"},{"text":"Basic Architecture This is the basic system architecture: ui exe <--------+ | &#94; | v | | da proxy exe | | &#94; | v | | bl dll <--------+ | v da dll | v database \"da proxy exe\" is for broadcasting the database change to all connected client, otherwise ui exe accesses bl dll directly and can only get database change by manually refreshing the view. \"da proxy exe\" is able to deliver web ui, so it is not only a web service, but also a web app Extended Architecture view (both gui & console) view model App Proxy (a backend switcher, support both native and network backend) communication balancer cache app service DAL (with DB switcher) DB Extensibility & Scalability Multiple DbContext: One extension one DbContext Have one \"contain-everything\" DbContext for database creation Extending function layers: All components' API use the common business entities If need an extra layer, e.g. validation, Performance measurement, caching, message queue, etc. , just add a new layer component in the middle with the same API interface (By this way, the prototype can just focus on the core functions) Network Avoid Callback, but use client side service If server use callback to contact client, one disadvantage is: once the callback interface changes, all the client must upgrade. Therefore, it may be better to have client side services to work as callback event interface. So when the client side service is changed, only the necessary minimal sites need to upgrade, other sites can still work on the old client side versions. Use Queue Need to consider to use a message queues for critical communications. Peer-to-peer Design Every client can work as a proxy Every client can replicate their proxy list to other clients Because notfication is not based on callback, every client just needs to wait for others to call them. So when a client update its own task, it will call all other clients one-by-one. Registration : the living client register itself in the central database, if it is down, other clients will update that client's status in the database if they cannot reach it.","tags":"hello","loc":"http://localhost:8000/blog/architecture.html","title":"Architecture"},{"text":"Overview More Considerations need to have some way to verify the database file is not corrupted About DTOs Only the relation tables are automatically created by the EF ORM framework, other tables all have a relevant DTO object with the same name. Database Merging Need database merging interfaces Need object transfering format definitions (probably using xml) Merge by ReadActivities()/CreateActivities() - the ORM should be able to create all tables","tags":"hello","loc":"http://localhost:8000/blog/database.html","title":"Database"},{"text":"Contents If find any build/runtime problem TiCommon TiDesk (the UI layer) Mix using WPF and WinForm TiCore (the BL layer) Serialization If find any build/runtime problem public void setReceivingSendSyncDResponse ( boolean isReceivingSendSyncDResponse ) { this . isReceivingSendSyncDResponse = isReceivingSendSyncDResponse ; if ( isReceivingSendSyncDResponse ) { msgSet = new DynetReceivedMessageSet ( network ); } else { sendSyndDReturn = new DynetReadResponse ( network ); sendSyndDReturn . readResponse ( sendSyndDRsp . getMsgSet ()); } } } Make sure the library references use the same .net platform as the relevant projects, especially the sqlite dll references, which were added manually in TiTest project TiCommon Reason why remove List<Task> property in Job to avoid maintain the in memory object state (to keep consistent with the DB data) it's too trouble to query a task list when create a Job object TiDesk (the UI layer) Mix using WPF and WinForm WPF does not have tray icon notification control, so WinForm is used for that function instead. Affedtec file: TimeInsightvsTideskMainWindow.xaml.cs Added reference: System.Windows.Forms TiCore (the BL layer) Serialization Although because of a hidden proxy object added by the entity framework, the serialization of DTOs can not be done in asp.net mvc, it can, however, be performed by a customized function using XmlSerializer and MemoryStream. To prevent circular reference, some DTO propoerties a marked as \"[XmlIgnoreAttribute]\"","tags":"hello","loc":"http://localhost:8000/blog/implementation-notes.html","title":"Implementation Notes"},{"text":"","tags":"hello","loc":"http://localhost:8000/blog/product.html","title":"Product"},{"text":"Console Commands Use py33.bat or vedjango142_v-env.bat Versions It is decided to develop multiple prototype versions: (main) Python version (probably with some performance critical java components), and C# version, and (optional) Java version to compare those technology and then make the final decision for the long term platform choice. Currently, the Python version is temporarily considered as the main production codebase, other versions will only be developed for learning and technology comparison purpose. However, this may be changed if it is proven that using other technology, e.g. Java or C#, can deliver faster or better code. When the final platform choice decision is made, all the other prototype codebases will released as open source projects. Technology Stack Misc [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-10-10_23:00:08] \u521d\u6b65\u51b3\u5b9a\u4f7f\u7528\u4ee5\u4e0b\u5de5\u5177\u6808\uff1a commonJS -- for \u6a21\u5757\u5316\uff0c\u4ee3\u7801\u91cd\u7528 + dojo -- for \u754c\u9762\u7ec4\u4ef6 + backbone -- for MVC\u6846\u67b6 + \u67d0\u4e00\u4e2apython web server: bottle or cherry or tornado +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=] Libs NDesk.Options 0.2.1 Description: A command line parser Recommended by: http://stackoverflow.com/questions/491595/best-way-to-parse-command-line-arguments-in-c Location: _labapp_TimeInsightvslibsndesk-optionsNDesk.Options.dll Download from: http://www.ndesk.org/Options Version in use: 0.2.1 Cloud Platform Iaas candidates: Amazon EC2: with HAProxy, Django, mod_wsgi, Apache, MySQL, memcached [1] Google Compute Engine https://cloud.google.com/pricing/compute-engine Configurations CI: Travis (recommended) or Jekins - Travis + selenium for web gui testing: http://about.travis-ci.org/docs/user/gui-and-headless-browsers/ Others: [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-09-24_17:51:47] - four-digit version number: major.feature.bug.revision - all feature & bug fixing work are on branch, then merge to trunk (trunk keeps stable for release) - create a script to read labels from hg to generate release notes and update version numbers +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=] Footnotes [1] from: Scaling Django to 30,000 requests per second","tags":"hello","loc":"http://localhost:8000/blog/project.html","title":"Project"},{"text":"Manual Testing Notify icon Test Large Amount of Tasks Run TiDesk and execute the relevant commands in the \"Test\" menu.","tags":"hello","loc":"http://localhost:8000/blog/testing.html","title":"Testing"},{"text":"Misc Need to provide a \"download\" button to download the user data to local machine [TBD] Download all or just a part of user data? [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-11-06_16:53:19] \u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u6253\u5f00\u6d4f\u89c8\u5668 http://docs.python.org/3/library/webbrowser.html \u7136\u540e\u540c\u65f6\u6253\u5f00\u4e00\u4e2a\u672c\u5730 web \u670d\u52a1\u5668 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=] Views Outline sidebar tree view, with a column to show a progress bar (display remaining task number, progress percentage) See: http://www.codeproject.com/Articles/30721/WPF-TreeListView-Control outline mode, tag mode circular including is not allowed as all children nodes need to be displayed Backlog table mode Insert defined row(s) above/below (change the defined row number in the setting) Insert row(s) above/below (will pop up a dialog to input the number of rows to be inserted) Should embed a collapsible tree on the first column, the UI is similar to this , but the progress bar should display on the outline view (scrum) board mode (using split+ListView, with property window) top: breadcrumb submit update --> update activity log (with a \"download\" button) --> update progress view create an unorganized task (i.e. todo) fast detail pane (like the TotalCommand \"ctrl+q\" feature ) copy paste to batch update the time estimate (like Excel) History (This view is like an \"Audits\" table in automation control system, and is also used as timesheet or my direction control purpose.) Record daily activities [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-09-24_17:53:28] execution page (readonly, automatically updated) --- the done list by date by issue \u7f51\u9875\u7248\uff1a \u7eb5\u5411\u4e24\u5217 \u5de6\u5217\uff0c1/3\u5bbd\u5ea6\uff0c\u65e5\u5386\u63a7\u4ef6\u6392\u5217\uff0c\u9f20\u6807\u6eda\u8f6e\u5e73\u6ed1\u6ed1\u52a8 \u53f3\u5217\uff0c2/3\u5bbd\u5ea6\uff0c\u65f6\u95f4\u7ebf\u6216\u8868\u683c\u4e24\u79cd\u89c6\u56fe see \"pg'-w. QTableWidget. QItemDelegate. QComboBox. _.py\" +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=] Columns : week day date job (so each job should have unique name) action create include in sprint start finish time reestimate suspend (need to provide reason) break down (when user do \"break down\" or \"move to a new job\") update (recorded when user do \"save\") close (need to provide reason) task remarks Statistic \u6839\u636e\u767e\u5206\u6bd4\u7684 burn down \u597d\u50cf\u66f4\u5408\u7406\u4e00\u70b9\uff08\u767e\u5206\u6bd4\u7684\u8ba1\u7b97\u5355\u4f4d\u8fd8\u662f\u5e94\u8be5\u6839\u636etime estimate\u6765\u8fdb\u884c\uff09 \u9664\u4e86 burn down chart \u4ee5\u5916\uff0c\u8fd8\u9700\u8981\u6b63\u8d1f\u67f1\u72b6\u56fe\uff0c\u6b63\u65b9\u5411\u4ee3\u8868\u63d2\u5165\u7684\u4efb\u52a1\u91cf\uff0c\u8d1f\u65b9\u5411\u4ee3\u8868\u6d88\u9664\u7684\u4efb\u52a1\u91cf \u6700\u540e\u90e8\u5206\u663e\u793a progress bar \uff08\u90a3\u4e9bJob\u7684\u9700\u8981\u663e\u793a\u5219\u5728\u67d0\u5904\u914d\u7f6e\uff09 SWOT (need to be moved to somewhere) strength weekness oppotunity threat Detail Task Detail View Used for adding task comments It was tracked issues page create date status project tags brief description details Menu Bar File [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-09-24_17:54:07] new (based on sqlite3 format) load --- can load multiple files) load all from path --- popup a tree list, and a input box to locate a path load a copy from URL --- download to local and open as readonly, can detect source change load a session --- a py file save as session --- a py file close current file close all files exist export to html export to pdf +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=] Search [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-09-24_21:09:28] search in current file search in all opened files +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=] View [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-09-24_21:10:19] file view outline view table mode board mode +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=] Tools Options Help [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-09-24_21:12:12] user manual about (a dialog with QCommandLinkButton) version (license info, version, release notes) application: idea history (GTD, scrum, excel spreadsheet) what problem does this application aim to resolve? publish for teamwork integrated with feature list/requirement/test (the requirement matrix) task stack easier management (status, project tree) keep motivation: achievement/done list (auto-genarate execution log and burn up chart) integrated with SWOT (direction control) need a local lightweight issue tracking database, which can be well integrated with the todo list author (hold off at this moment) My name (Ron when ordering coffee, the pronunciation of \"Li\") My blog link My github link \uff08move the following info to github\uff09 My product development principle innovation is not from a sudden inspiration but from a specific problem resolving and constant improvement user experience, especially details and UI, should always has the top priority information and data should be always searchable My software engineering principle microkernel unit test modular, especially separate UI from BL reusable, testable, scalable, extendable acknowledgement (give lib list; for qt, pyside, python, github, mercurial, tortoisehg, tortoisegit & microsoft excel) +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=] Feedback [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-09-24_21:13:14] bug report proposals proposal votes e.g. As a (tick boxes) personal user team user with ___ memebers , I want \"(some feature discription)\" , so that I can ... [TODO] how to collect the info of the most used feature? [TODO] how to determine the features that users are willing to pay? create other proposals other comments +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=] Tool Bar [=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+- @@ @@ [#2012-09-24_17:54:41] search +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]","tags":"hello","loc":"http://localhost:8000/blog/user-interface.html","title":"User Interface"},{"text":"\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5 \u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5\u6d4b\u8bd5","tags":"Chinese","loc":"http://localhost:8000/blog/this-is-some-title-zh_cn.html","title":"\u4e2d\u6587\u7ffb\u8bd1\u6d4b\u8bd5"}]}