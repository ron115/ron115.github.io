<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Pelican Test</title><link href="http://assert-false.com/zh/" rel="alternate"></link><link href="http://assert-false.com/zh/feeds%5Cfancy.atom.xml" rel="self"></link><id>http://assert-false.com/zh/</id><updated>2013-12-23T10:20:00+11:00</updated><entry><title>User Interface</title><link href="http://assert-false.com/zh/user-interface.html" rel="alternate"></link><updated>2013-12-23T10:20:00+11:00</updated><author><name>李某</name></author><id>tag:assert-false.com/zh,2013-12-23:user-interface.html</id><summary type="html">
&lt;div class="section" id="misc"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;Misc&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Need to provide a "download" button to download the user data to local machine&lt;/p&gt;
&lt;p&gt;[TBD] Download all or just a part of user data?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-11-06_16:53:19]

用下面的方式打开浏览器
http://docs.python.org/3/library/webbrowser.html

然后同时打开一个本地 web 服务器

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Views&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="outline"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id3"&gt;Outline&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sidebar&lt;/li&gt;
&lt;li&gt;tree view, with a column to show a progress bar (display remaining task number, progress percentage)&lt;ul&gt;
&lt;li&gt;See: &lt;a class="reference external" href="http://www.codeproject.com/Articles/30721/WPF-TreeListView-Control"&gt;http://www.codeproject.com/Articles/30721/WPF-TreeListView-Control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;outline mode, tag mode&lt;/li&gt;
&lt;li&gt;circular including is not allowed as all children nodes need to be displayed&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="backlog"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id4"&gt;Backlog&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;table mode&lt;ul&gt;
&lt;li&gt;Insert defined row(s) above/below (change the defined row number in the setting)&lt;/li&gt;
&lt;li&gt;Insert row(s) above/below (will pop up a dialog to input the number of rows to be inserted)&lt;/li&gt;
&lt;li&gt;Should embed a collapsible tree on the first column,
the UI is similar to &lt;a class="reference external" href="http://www.taskmanagementguide.com/images/solution/articles/activity-management-software-different-activities001.jpg"&gt;this&lt;/a&gt;,
but the progress bar should display on the outline view&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(scrum) board mode (using split+ListView, with property window)&lt;/li&gt;
&lt;li&gt;top: breadcrumb&lt;/li&gt;
&lt;li&gt;submit update&lt;ul&gt;
&lt;li&gt;--&amp;gt; update activity log (with a "download" button)&lt;/li&gt;
&lt;li&gt;--&amp;gt; update progress view&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;create an unorganized task (i.e. todo)&lt;/li&gt;
&lt;li&gt;fast detail pane (like the TotalCommand "ctrl+q" feature )&lt;/li&gt;
&lt;li&gt;copy paste to batch update the time estimate (like Excel)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="history"&gt;
&lt;span id="activity-view"&gt;&lt;/span&gt;&lt;h3&gt;&lt;a class="toc-backref" href="#id5"&gt;History&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;(This view is like an "Audits" table in automation control system, and is also used as timesheet or my
direction control purpose.)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Record daily activities&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-09-24_17:53:28]

execution page (readonly, automatically updated) --- the done list
    by date
    by issue

    网页版：
    纵向两列
    左列，1/3宽度，日历控件排列，鼠标滚轮平滑滑动
    右列，2/3宽度，时间线或表格两种视图

see "pg'-w. QTableWidget. QItemDelegate. QComboBox. _.py"

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Columns&lt;/strong&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;week day&lt;/li&gt;
&lt;li&gt;date&lt;/li&gt;
&lt;li&gt;job (so each job should have unique name)&lt;/li&gt;
&lt;li&gt;action&lt;ol class="arabic"&gt;
&lt;li&gt;create&lt;/li&gt;
&lt;li&gt;include in sprint&lt;/li&gt;
&lt;li&gt;start&lt;/li&gt;
&lt;li&gt;finish&lt;/li&gt;
&lt;li&gt;time reestimate&lt;/li&gt;
&lt;li&gt;suspend (need to provide reason)&lt;/li&gt;
&lt;li&gt;break down (when user do "break down" or "move to a new job")&lt;/li&gt;
&lt;li&gt;update (recorded when user do "save")&lt;/li&gt;
&lt;li&gt;close (need to provide reason)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;task&lt;/li&gt;
&lt;li&gt;remarks&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="statistic"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id6"&gt;Statistic&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;根据百分比的 burn down 好像更合理一点（百分比的计算单位还是应该根据time estimate来进行）&lt;/li&gt;
&lt;li&gt;除了 burn down chart 以外，还需要正负柱状图，正方向代表插入的任务量，负方向代表消除的任务量&lt;/li&gt;
&lt;li&gt;最后部分显示 progress bar （那些Job的需要显示则在某处配置）&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="swot"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id7"&gt;SWOT&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;(need to be moved to somewhere)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;strength&lt;/li&gt;
&lt;li&gt;weekness&lt;/li&gt;
&lt;li&gt;oppotunity&lt;/li&gt;
&lt;li&gt;threat&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="detail"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id8"&gt;Detail&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Task Detail View&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Used for adding task comments&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;It was tracked issues page&lt;/p&gt;
&lt;pre class="literal-block"&gt;
create date
status
project
tags
brief description
details
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="menu-bar"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id9"&gt;Menu Bar&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="file"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id10"&gt;File&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-09-24_17:54:07]

new (based on sqlite3 format)

load --- can load multiple files)
load all from path --- popup a tree list, and a input box to locate a path
load a copy from URL --- download to local and open as readonly, can detect source change
load a session --- a py file

save as session --- a py file

close current file
close all files

exist

export to html
export to pdf

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="search"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id11"&gt;Search&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-09-24_21:09:28]

search in current file
search in all opened files

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="view"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id12"&gt;View&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-09-24_21:10:19]

file view
outline view

table mode
board mode

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="tools"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id13"&gt;Tools&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="options"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id14"&gt;Options&lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="help"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id15"&gt;Help&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-09-24_21:12:12]

user manual
about (a dialog with QCommandLinkButton)
    version (license info, version, release notes)
    application:
        idea history (GTD, scrum, excel spreadsheet)
        what problem does this application aim to resolve?
            publish for teamwork
            integrated with feature list/requirement/test (the requirement matrix)
            task stack
            easier management (status, project tree)
            keep motivation: achievement/done list (auto-genarate execution log and burn up chart)
            integrated with SWOT (direction control)
            need a local lightweight issue tracking database, which can be well integrated with the todo list
    author (hold off at this moment)
        My name (Ron when ordering coffee, the pronunciation of "Li")
        My blog link
        My github link
            （move the following info to github）
            My product development principle
                innovation is not from a sudden inspiration but from a specific problem resolving and constant improvement
                user experience, especially details and UI, should always has the top priority
                information and data should be always searchable
            My software engineering principle
                microkernel
                unit test
                modular, especially separate UI from BL
                reusable, testable, scalable, extendable
    acknowledgement (give lib list; for qt, pyside, python, github, mercurial, tortoisehg, tortoisegit &amp;amp; microsoft excel)

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="feedback"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id16"&gt;Feedback&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-09-24_21:13:14]

bug report
proposals
    proposal votes
        e.g.

        As a (tick boxes)
            personal user
            team user with ___ memebers
        , I want "(some feature discription)"
        , so that I can ...

        [TODO] how to collect the info of the most used feature?
        [TODO] how to determine the features that users are willing to pay?
    create other proposals
other comments

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tool-bar"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id17"&gt;Tool Bar&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-09-24_17:54:41]

search

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;/div&gt;
</summary></entry><entry><title>Architecture</title><link href="http://assert-false.com/zh/architecture.html" rel="alternate"></link><updated>2010-10-03T10:20:00+11:00</updated><author><name>李某</name></author><id>tag:assert-false.com/zh,2010-10-03:architecture.html</id><summary type="html">
&lt;div class="section" id="basic-architecture"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Basic Architecture&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is the basic system architecture:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
ui exe &amp;lt;--------+
  | ^           |
  v |           |
da proxy exe    |
  | ^           |
  v |           |
bl dll &amp;lt;--------+
  |
  v
da dll
  |
  v
database
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;"da proxy exe" is for broadcasting the database change to all connected client, otherwise
ui exe accesses bl dll directly and can only get database change by manually refreshing the
view.&lt;/li&gt;
&lt;li&gt;"da proxy exe" is able to deliver web ui, so it is not only a web service, but also a web app&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="extended-architecture"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Extended Architecture&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
view (both gui &amp;amp; console)
view model

App Proxy (a backend switcher, support both native and network backend)

communication

balancer
cache
app service
DAL (with DB switcher)

DB
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="extensibility-scalability"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Extensibility &amp;amp; Scalability&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Multiple DbContext:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;One extension one DbContext&lt;/li&gt;
&lt;li&gt;Have one "contain-everything" DbContext for database creation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Extending function layers:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;All components' API use the common business entities&lt;/li&gt;
&lt;li&gt;If need an extra layer, e.g. validation, Performance measurement, caching, message queue,
etc. , just add a new layer component in the middle with the same API interface (By this
way, the prototype can just focus on the core functions)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="network"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;Network&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Avoid Callback, but use client side service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If server use callback to contact client, one disadvantage is: once the callback interface changes,
all the client must upgrade.&lt;/p&gt;
&lt;p&gt;Therefore, it may be better to have client side services to work as callback event interface. So when
the client side service is changed, only the necessary minimal sites need to upgrade, other sites
can still work on the old client side versions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Use Queue&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Need to consider to use a message queues for critical communications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;Peer-to-peer Design&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Every client can work as a proxy&lt;/li&gt;
&lt;li&gt;Every client can replicate their proxy list to other clients&lt;/li&gt;
&lt;li&gt;Because notfication is not based on callback, every client just needs to wait for others to
call them. So when a client update its own task, it will call all other clients one-by-one.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Registration&lt;/strong&gt;: the living client register itself in the central database, if it is down, other
clients will update that client's status in the database if they cannot reach it.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id6"&gt;中文搜索测试&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;下面这些错误大部分是观察所得，少部分是亲身经历，用血换来的教训：&lt;/p&gt;
&lt;p&gt;1、高估帮忙的价值&lt;/p&gt;
&lt;p&gt;大家都知道好的投资人应该是帮忙不添乱。有些投资者尤其是战略投资者，最喜欢罗列他们拥有的资源和帮助。但往往到最后发现，资源是共用的，派过来帮忙的人是外行，其他诉求石沉大海，最好还得靠自己。&lt;/p&gt;
&lt;p&gt;2、低估添乱的影响&lt;/p&gt;
&lt;p&gt;业内有一些老资历公司，是公认的害虫，尽管在被投资公司中占小股，但发号施令，天天骚扰，董事会上从不配合，让你日日胸闷。就因为他最早找到你，就因为他不断引诱你，就因为不拿白不拿，就因为钱快烧完，总之你拿了缺乏共识的投资人的钱。最终，听他的可能把公司搞成四不像，不听他的他又去外面放话，让你陷入人间炼狱。&lt;/p&gt;
&lt;p&gt;3、把投资人等同于身后的机构&lt;/p&gt;
&lt;p&gt;不靠谱的机构，人多半不靠谱;但靠谱的机构，不一定各个都靠谱。有的人虽然在产生过很多明星公司的机构，但完全水货一个，好的案子跟他无关，坑爹的案子干过不少。擦亮眼睛，去评判投资人的专业程度，而不要被所谓品牌蛊惑。&lt;/p&gt;
&lt;p&gt;4、宁做凤尾，不做鸡头&lt;/p&gt;
&lt;p&gt;这指的是孵化器的情形。很多团队一窝蜂往明星孵化器钻，也不肯加入一个新开设的孵化器。然而，孵化器的好坏区别在于它资源的大小，好的孵化器，能支持数十个团队都得到支援，单薄的孵化器则只能支援数个，甚至一个。即便你假如一个不知名的孵化器，但如果你表现得最好，起码你可以得到再次融资的机会。至于只提供办公场地的孵化器，我只想说：我很幸福。&lt;/p&gt;
&lt;p&gt;5、过早稀释股权&lt;/p&gt;
&lt;p&gt;因为不熟悉融资的游戏规则，因为你听信了“重要的是赚钱了以后分钱” ，你在第一轮或者第二轮融资中就稀释了 40%、60% 甚至 80% 的股权。被别人控制公司导致失败、分裂或难以发展倒不算痛心，万一发展得很好，结果前面稀释的越多，后面融资的选择就越少，当你被稀释到只剩 10%、5%，这还算是你的公司吗?&lt;/p&gt;
&lt;p&gt;6、用错误的结构融资&lt;/p&gt;
&lt;p&gt;为了赶快把钱拿进来，跟投资人签夸张的分成方式、管理机制、对赌条款、完全不平等的清算条款等非常另类的合同，或是用非国际惯例的结构设计特别股。这里面的道理很简单，没想过共赢做大的投资人也没能力让公司发展壮大。乱七八糟的资本结构和合同，只会吓跑后面想投资的机构。&lt;/p&gt;
&lt;p&gt;7、早期融资轻视投资人&lt;/p&gt;
&lt;p&gt;很多人融了天使资金以后，闷头封闭，再也不和投资机构接触。如果你选择了一家优秀的投资机构，这是大大的浪费。投资机构积累了大量成败案例和商业判断以及其他企业的友好关系，如果不去交流和利用，和拿土壕的钱有何区别?&lt;/p&gt;
&lt;p&gt;8、后期融资高估投资人&lt;/p&gt;
&lt;p&gt;公司发展起来之后，很多人在选择下轮投资的时候，总倾向于大牌、知名的机构，但越大牌的机构，手中积累的优秀公司越多，他绝不会为你的生死去赌上身家。发展方向是否一致，反而是唯一的判断标准。&lt;/p&gt;
&lt;p&gt;9、选择不靠谱的战略投资&lt;/p&gt;
&lt;p&gt;但凡投资部门没有独立于业务部门的战略投资方，都是耍流氓。有一些大公司(不点名)投资了一堆团队，不要说成功，连产品影子都没看到。为何?因为负责投资部门的高管是无实权的存在，或者兼任着其他业务部门。投资的成败要么无足轻重要么只是他汇报业绩时候的锦上添花。你们的死活，与他们无干。&lt;/p&gt;
&lt;p&gt;10、选择关注自己多于创业者的投资人&lt;/p&gt;
&lt;p&gt;总在说自己多牛逼、公司多牛逼，却不细细询问创业者情况的投资人，是典型的投机者，一旦谈成投资，他多半人间蒸发，忙着另外一些让他“更牛逼”的事情。于是，你不过是他投机过程中的问路石或者垫脚石。&lt;/p&gt;
&lt;p&gt;11、选择一头热的投资人&lt;/p&gt;
&lt;p&gt;当然投资人必须对你的团队、产品，或商业模式有一定的热情，但投资毕竟是很理性的工作，如果他过分热情，却没有想清楚自己为什么要投资你的公司，那也是非常危险的结合。 新创公司往往必须酝酿多年才能到达被收购或上市的彼岸，在这漫漫长路上，创业团队的财务状况常常是忽高忽低。 现在一头热的投资人，未来随时可能会受不了这云霄飞车，转而成为难搞的恐怖股东。&lt;/p&gt;
&lt;p&gt;12、选择内部权力结构不稳定的投资人&lt;/p&gt;
&lt;p&gt;有一种投资人，投资的时候都很好，刚开始成为股东时也合作非常愉快。但突然间股东的公司内部出现斗争、权力大幅转移，导致股东代表换成了当初反对这样投资的一方，接着便开始处处找团队麻烦。碰到这样情况新创公司当然是哑巴吃黄莲，不过如果一开始对方的权力结构就不太稳定，那么拿他的钱之前恐怕还是要三思。如何评价一个公司乱不乱，看高管是不是走马灯就知道了，我也不多说了!&lt;/p&gt;
&lt;p&gt;13、选择没有投资过同样业务的投资人&lt;/p&gt;
&lt;p&gt;这是先有鸡还是先有蛋的问题，但当小白鼠的人总是风险比较大。我的经验是，第一次投资某业务的股东，投资后在董事会上大概要 12-18 个月才能真的上轨道，到了第二次投资以后，情况就会好很多。所以有选择的话，还是尽量倾向于已经投过相关业务公司的人。&lt;/p&gt;
&lt;p&gt;14、选择基金将要到期的投资人&lt;/p&gt;
&lt;p&gt;最后，这指的是中后期融资所发生的情况。基金通常有7-10 年的寿命，因此到了后期，负责管理基金的投资人(所谓 GP)会受到他们的股东(所谓 LP)越来越大的压力，要赶快出脱持股、获利了结。所以假设他投资你时基金还有4、5 年寿命，那你可以想像2、3 年后，他会开始感受到压力，因此推动你往退出方向走的力度会不断的增加，这时可能会让公司陷入困难的抉择。&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Database</title><link href="http://assert-false.com/zh/database.html" rel="alternate"></link><updated>2010-10-03T10:20:00+11:00</updated><author><name>李某</name></author><id>tag:assert-false.com/zh,2010-10-03:database.html</id><summary type="html">&lt;div class="section" id="overview"&gt;
&lt;h2&gt;Overview&lt;/h2&gt;
&lt;div class="section" id="more-considerations"&gt;
&lt;h3&gt;More Considerations&lt;/h3&gt;
&lt;p&gt;need to have some way to verify the database file is not corrupted&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="about-dtos"&gt;
&lt;h3&gt;About DTOs&lt;/h3&gt;
&lt;p&gt;Only the relation tables are automatically created by the EF ORM framework,
other tables all have a relevant DTO object with the same name.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="database-merging"&gt;
&lt;h3&gt;Database Merging&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Need database merging interfaces&lt;/li&gt;
&lt;li&gt;Need object transfering format definitions (probably using xml)&lt;/li&gt;
&lt;li&gt;Merge by ReadActivities()/CreateActivities() - the ORM should be able to create all tables&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Implementation Notes</title><link href="http://assert-false.com/zh/implementation-notes.html" rel="alternate"></link><updated>2010-10-03T10:20:00+11:00</updated><author><name>李某</name></author><id>tag:assert-false.com/zh,2010-10-03:implementation-notes.html</id><summary type="html">
&lt;div class="section" id="if-find-any-build-runtime-problem"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id1"&gt;If find any build/runtime problem&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code java literal-block"&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setReceivingSendSyncDResponse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="n"&gt;isReceivingSendSyncDResponse&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isReceivingSendSyncDResponse&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;isReceivingSendSyncDResponse&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isReceivingSendSyncDResponse&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;msgSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DynetReceivedMessageSet&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;sendSyndDReturn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DynetReadResponse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;network&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="n"&gt;sendSyndDReturn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;readResponse&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sendSyndDRsp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMsgSet&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Make sure the library references use the same .net platform as the relevant projects,
especially the sqlite dll references, which were added manually in TiTest project&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="ticommon"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;TiCommon&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reason why remove List&amp;lt;Task&amp;gt; property in Job&lt;ul&gt;
&lt;li&gt;to avoid maintain the in memory object state (to keep consistent with the DB data)&lt;/li&gt;
&lt;li&gt;it's too trouble to query a task list when create a Job object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="tidesk-the-ui-layer"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;TiDesk (the UI layer)&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="mix-using-wpf-and-winform"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id4"&gt;Mix using WPF and WinForm&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;WPF does not have tray icon notification control, so WinForm is used for that function instead.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Affedtec file: TimeInsightvsTideskMainWindow.xaml.cs&lt;/li&gt;
&lt;li&gt;Added reference: System.Windows.Forms&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ticore-the-bl-layer"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id5"&gt;TiCore (the BL layer)&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="serialization"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id6"&gt;Serialization&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Although because of a hidden proxy object added by the entity framework, the serialization of DTOs can not be done
in asp.net mvc, it can, however, be performed by a customized function using XmlSerializer and MemoryStream.&lt;/li&gt;
&lt;li&gt;To prevent circular reference, some DTO propoerties a marked as "[XmlIgnoreAttribute]"&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary></entry><entry><title>Product</title><link href="http://assert-false.com/zh/product.html" rel="alternate"></link><updated>2010-10-03T10:20:00+11:00</updated><author><name>李某</name></author><id>tag:assert-false.com/zh,2010-10-03:product.html</id><summary type="html"></summary></entry><entry><title>Project</title><link href="http://assert-false.com/zh/project.html" rel="alternate"></link><updated>2010-10-03T10:20:00+11:00</updated><author><name>李某</name></author><id>tag:assert-false.com/zh,2010-10-03:project.html</id><summary type="html">
&lt;div class="section" id="console-commands"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id2"&gt;Console Commands&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use py33.bat or vedjango142_v-env.bat&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="versions"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id3"&gt;Versions&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is decided to develop multiple prototype versions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;(main) Python version (probably with some performance critical java components), and&lt;/li&gt;
&lt;li&gt;C# version, and&lt;/li&gt;
&lt;li&gt;(optional) Java version&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;to compare those technology and then make the final decision for the long term platform choice.&lt;/p&gt;
&lt;p&gt;Currently, the Python version is temporarily considered as the main production codebase, other versions
will only be developed for learning and technology comparison purpose. However, this may be changed if
it is proven that using other technology, e.g. Java or C#, can deliver faster or better code.&lt;/p&gt;
&lt;p&gt;When the final platform choice decision is made, all the other prototype codebases will released as open source projects.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="technology-stack"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id4"&gt;Technology Stack&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="misc"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id5"&gt;Misc&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-10-10_23:00:08]

初步决定使用以下工具栈：

  commonJS  -- for 模块化，代码重用
+ dojo      -- for 界面组件
+ backbone  -- for MVC框架
+ 某一个python web server:
       bottle
    or cherry
    or tornado

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="libs"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id6"&gt;Libs&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NDesk.Options 0.2.1&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Description: A command line parser&lt;/p&gt;
&lt;p&gt;Recommended by: &lt;a class="reference external" href="http://stackoverflow.com/questions/491595/best-way-to-parse-command-line-arguments-in-c"&gt;http://stackoverflow.com/questions/491595/best-way-to-parse-command-line-arguments-in-c&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Location: _labapp_TimeInsightvslibsndesk-optionsNDesk.Options.dll&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Download from: &lt;a class="reference external" href="http://www.ndesk.org/Options"&gt;http://www.ndesk.org/Options&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Version in use: 0.2.1&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="cloud-platform"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="#id7"&gt;Cloud Platform&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Iaas candidates:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Amazon EC2: with HAProxy, Django, mod_wsgi, Apache, MySQL, memcached &lt;a class="footnote-reference" href="#f1" id="id1"&gt;[1]&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Google Compute Engine &lt;a class="reference external" href="https://cloud.google.com/pricing/compute-engine"&gt;https://cloud.google.com/pricing/compute-engine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configurations"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="#id8"&gt;Configurations&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;CI: Travis (recommended) or Jekins
- Travis + selenium for web gui testing: &lt;a class="reference external" href="http://about.travis-ci.org/docs/user/gui-and-headless-browsers/"&gt;http://about.travis-ci.org/docs/user/gui-and-headless-browsers/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Others:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="literal-block"&gt;
[=+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-
@@
@@ [#2012-09-24_17:51:47]

- four-digit version number: major.feature.bug.revision
- all feature &amp;amp; bug fixing work are on branch, then merge to trunk (trunk
  keeps stable for release)
- create a script to read labels from hg to generate release notes and
  update version numbers

+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+=]
&lt;/pre&gt;
&lt;p class="rubric"&gt;Footnotes&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="f1" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;from: &lt;a class="reference external" href="http://attentionshard.wordpress.com/2011/04/26/scaling-django-to-30000-requests-per-second/"&gt;Scaling Django to 30,000 requests per second&lt;/a&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary></entry><entry><title>Testing</title><link href="http://assert-false.com/zh/testing.html" rel="alternate"></link><updated>2010-10-03T10:20:00+11:00</updated><author><name>李某</name></author><id>tag:assert-false.com/zh,2010-10-03:testing.html</id><summary type="html">&lt;div class="section" id="manual-testing"&gt;
&lt;h2&gt;Manual Testing&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Notify icon&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="test-large-amount-of-tasks"&gt;
&lt;h2&gt;Test Large Amount of Tasks&lt;/h2&gt;
&lt;p&gt;Run TiDesk and execute the relevant commands in the &amp;quot;Test&amp;quot; menu.&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>